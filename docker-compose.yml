# Docker Compose-Datei zum Ausführen von Paperless aus der Docker-Container-Registrierung.
# Diese Datei enthält alles, was Paperless zum Ausführen benötigt.
# Paperless unterstützt amd64, arm und arm64-Hardware.
# Alle Compose-Dateien von Paperless konfigurieren Paperless wie folgt:
# - Paperless wird beim Systemstart (neu) gestartet, sofern es vor dem Herunterfahren ausgeführt wurde.
# - Docker-Volumes zur Datenspeicherung werden von Docker verwaltet.
# - Ordner zum Importieren und Exportieren von Dateien werden im selben Verzeichnis wie diese Datei erstellt 
#   und in die richtigen Ordner im Container eingebunden.
# - Paperless lauscht auf Port 8810.
#
# SQLite wird als Datenbank verwendet. Die SQLite-Datei wird im data-Verzeichnis gespeichert.
#
# Zusätzlich fügt diese Docker Compose-Datei die folgenden optionalen Konfigurationen hinzu:
# - Apache Tika- und Gotenberg-Server werden mit Paperless gestartet und Paperless wird für die Nutzung dieser
#   Dienste konfiguriert. Diese unterstützen die Nutzung von Office-Dokumenten (Word, Excel, PowerPoint und 
#   deren LibreOffice-Gegenstücke).
#
# Um Paperless mit dieser Datei zu installieren und zu aktualisieren, gehen Sie wie folgt vor:
#
# - Kopiere diese Datei als 'docker-compose.yml' und die Dateien 'docker-compose.env' und '.env' in ein Verzeichnis.
# - Führe aus 'docker compose pull'.
# - Führe aus 'docker compose run --rm webserver createsuperuser' um einen User anzulegen.
# - Führe aus 'docker compose up -d'.
#
# Ausführlichere Installations- und Update-Anweisungen finden Sie in der Dokumentation.

services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - broker
      - gotenberg
      - tika
    ports:
      - "8810:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    restart: unless-stopped
    # Die Gotenberg Chromium-Route wird zum Konvertieren von EML-Dateien verwendet. Externe Inhalte wie 
    # Tracking-Pixel oder JavaScript möchten wir nicht zulassen.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped

volumes:
  data:
  media:
  redisdata:
